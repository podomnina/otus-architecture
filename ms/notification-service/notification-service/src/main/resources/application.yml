server:
  port: 8086

spring:
  application:
    name: notification-service
  datasource:
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    url: ${db.url}
    user: ${db.username}
    password: ${db.password}
    locations:
      - classpath:db
    schemas:
      - notification
  #mail:
  #  host: smtp.rambler.ru
  #  port: 465
  #  username: my-email
  #  password: my-password
  #  protocol: smtp
  #  properties:
  #   mail:
  #     smtp:
  #       from: podomninatest@rambler.ru
  #       auth: true
  #       ssl:
  #         enable: true
  #  default-encoding: UTF-8
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

db:
  url:
  username:
  password:

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, metrics
  metrics:
    enable:
      timed: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true
logging:
  level:
    ru.otus: DEBUG